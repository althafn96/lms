extend type Query {
    admins(first_name: String @where(operator: "like"), last_name: String @where(operator: "like"), orderBy: _ @orderBy(columns: ["created_at"])): [Admin!]! @paginate(defaultCount: 10)
    admin(slug: String! @eq): Admin @first
}

extend type Mutation {
    createAdmin(input: AdminInput! @spread): Admin @create
    updateAdmin(id: ID!, input: AdminInput! @spread): Admin @update
    deleteAdmin(id: ID!): Admin @delete
}

input AdminInput {
    first_name: String!
    last_name: String!
    display_picture: Upload
    user: AdminUserMorphOne
}

input AdminUserMorphOne {
    create: CreateAdminUserInput
    update: UpdateAdminUserInput
}

input CreateAdminUserInput {
    email: String!
    password: String! @hash
    status: Int!
}

input UpdateAdminUserInput {
    id: ID!
    email: String
    password: String @hash
    status: Int!
}

type Admin @model(class: "\\App\\Models\\Users\\Admin") {
    id: ID!
    first_name: String!
    last_name: String!
    full_name: String @field(resolver: "App\\Models\\Users\\Admin@getFullName")
    display_picture: String @field(resolver: "App\\Models\\Users\\Admin@getDisplayPictureUrl")
    slug: String
    created_at: DateTime!
    updated_at: DateTime!
    humanized_created_at: String @field(resolver: "App\\Models\\Users\\Instructor@humanizedCreatedAt")
    user: User! @morphOne
}
